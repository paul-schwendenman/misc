#! /bin/bash

FAIL2BAN="/var/log/fail2ban.log"

version () {
	cat <<_EOF
 ___________________
/  Parse fail2ban   \ 
|      v0.2.1       |
|                   |
\ Paul Schwendenman /
 -------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\ 
                ||----w |
                ||     ||
_EOF

}

usage() {
	version
	cat <<_EOF

Usage:
    $program all
        Show all banned ips
    $program geoip
        Show all banned "locations" (lookup ips with geoiplookup)
    $program date
    	Show number of bans per date.
    $program date [YYYY-MM-DD]
    	Show banned ip addresses on a certain date
    $program today
        Show all banned ips that have been banned today
    $program ip address
    	Show dates a certian ip address was banned
    $program section
    	Show ips grouped by section.
    $program section [jail]
    	Show results only for that particular jail.
    $program count [jail]
        Show count of total bans (for optional jail.)
    $program help
        Show this text.
    $program version
        Show version information.

More information?
_EOF
}

is_command() {
	case "$1" in
		all|ip|section|date|today|count|geoip|help|--help|version|--version) return 0 ;;
		*) return 1 ;;
	esac
}

ddate() {
	if [ -z $1 ]; then
	        zgrep -h "WARNING \[[a-z]*\] Ban" /var/log/fail2ban.log* | awk '{print $1}' | sort -r | uniq -c
	else
		echo "{$1}"
		echo $1 | grep -q "^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}"
		if [ $? -eq 0 ]; then
			grep -h "WARNING \[[a-z]*\] Ban" /var/log/fail2ban.log  | grep "^$1" | awk '{print $NF}' | uniq -c | sort -n -r
			exit 0
		else
			echo "Bad Date format: YYYY-MM-DD"
			exit 1
		fi
	fi
}

ip () {
        echo $1 | grep -q "^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}"
        if [ $? -eq 0 ]; then
                zgrep -h "WARNING \[[a-z]*\] U*n*[Bb]an" /var/log/fail2ban.log* | grep "$1" | awk '{print $5,$6,$1}' | sort | awk '{printf "%-6s %-6s %-12s\n", $3, $2, $1}' | sort | uniq -c
                exit 0
        else
                echo "Bad IP: XXX.XXX.XXX.XXX"
                exit 1
        fi
}

all () {
        zgrep -h "WARNING \[[a-z]*\] Ban" /var/log/fail2ban.log* | awk '{print $NF}' | sort -V | uniq -c

}

geoip () {
        zgrep -h "WARNING \[[a-z]*\] Ban" /var/log/fail2ban.log* | awk '{print $NF}' | xargs -I{} geoiplookup {} | cut -d " " -f 4- | sort | uniq -c | sort -n -r

}

section () {
	if [ -z $1 ]; then
	        zgrep -h "WARNING \[[a-z]*\] Ban" /var/log/fail2ban.log* | awk '{print $1,$5}' | sort -r | awk '{printf "%-10s %s\n", $2, $1}' | uniq -c
	else
		echo "{$1}"
	        zgrep -h "WARNING \[[a-z]*\] U*n*[Bb]an" /var/log/fail2ban.log* | grep "\[$1\]" | awk '{print $1,$6,$7}' | sort -r -n | uniq -c
	fi
}

count () {
	if [ -z $1 ]; then
	        lines=$(zgrep -h "WARNING \[[a-z]*\] U*n*[Bb]an" /var/log/fail2ban.log*)
	else
		echo "{$1}"
	        lines=$(zgrep -h "WARNING \[$1\] U*n*[Bb]an" /var/log/fail2ban.log*)
	fi
	unban=$(echo "$lines" | grep "Unban" | wc -l)
	banned=$(echo "$lines" | grep "Ban")
	ban=$(echo "$banned" | wc -l)
	unique=$(echo "$banned" | awk '{print $NF}' | sort -n | uniq -c | wc -l)
	echo Total Bans: $ban
	echo Active Bans: $((ban - unban))
	echo Unique Bans: "$unique"
}

program="$(basename "$0")"
command="$1"

if is_command "$command"; then
	shift
else
	command="help"
fi

case "$command" in
	all)
		all
		exit 0
		;;
	geoip)
		geoip
		exit 0
		;;
	ip)
		ip $1
		;;
	section)
		section $1
		exit 0
		;;
	count)
		count $1
		exit 0
		;;
	today)
		ddate $(date +%Y-%m-%d)
		;;
	date)
		ddate $1
		;;
	help|--help)
		usage
		;;
	version|--version)
		version
		exit 0
		;;
	*)
		usage
		exit 1
		;;
esac
